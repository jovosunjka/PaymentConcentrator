

server:
  port: 8443
  #servlet:
    #context-path: /pki


token:
  header: X-Auth-Token
  secret: myXAuthSecret
  expiration: 1800000


main_root_ca: payment_concentrator_root_ca_main


#server.ssl.client-auth: need
server.ssl.protocol: TLS
server.ssl.enabled-protocols: TLSv1.2
server.ssl.ciphers: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
# Za definisanje ovoga, treba prethodno iskoristi kod u PkiApplication klasi, koja izlistava sve podrzane
# chipers u Javi instaliranoj na nasem racunaru
# Kod je pronadjen na: https://stackoverflow.com/questions/48934210/java-ssl-error-cannot-support-tls-ecdhe-rsa-with-aes-256-gcm-sha384


#server.ssl.key-store: target/classes/stores/keystore.jks
#server.ssl.key-store: src/main/resources/stores/keystore.jks
server.ssl.key-store: classpath:stores/keystore.jks
server.ssl.key-store-password: key_store_pass
server.ssl.key-store-type: JKS
server.ssl.key-alias: ${main_root_ca}

#server.ssl.trust-store: target/classes/stores/truststore.jks
#server.ssl.trust-store: src/main/resources/stores/truststore.jks
server.ssl.trust-store: classpath:stores/truststore.jks
server.ssl.trust-store-password: trust_store_pass
server.ssl.trust-store-type: JKS


#directory_stores: target/classes/stores
#directory_stores: src/main/resources/stores
directory-stores: classpath:stores



#ftp.host: localhost
#ftp.port: 2121
#ftp.username: siem_center_ftp
#ftp.password: siem_center_ftp_pass
ftp.target-directory-name: .
#ftp.target-directory-name: stores

cetificate.expiry.check: 0 14 13 * * *
# svaki dan u 23:59



eureka:
  client:
    serviceUrl:
      defaultZone: https://localhost:8761/eureka
    healthcheck:
      enabled: true
    lease:
      duration: 5
  instance:
    hostName: localhost
    nonSecurePortEnabled: false
    securePortEnabled: true
    securePort: ${server.port}
    statusPageUrl: https://${eureka.instance.hostname}:${eureka.instance.securePort}/${spring.application.name}/info
    healthCheckUrl: https://${eureka.instance.hostName}:${eureka.instance.securePort}/${spring.application.name}/health
    homePageUrl: https://${eureka.instance.hostname}:${eureka.instance.securePort}/${spring.application.name}/
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
    preferIpAddress: true


spring:
  application:
    name: pki-microservice
  #Spring DataSource
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:myDb;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password:
    #korisno ako je konekcija dugo u idle stanju
    testWhileIdle: true
    validationQuery: SELECT 1
    initialization-mode: always
  #Ukljucivanje konzole
  h2:
    console:
      enabled: true
      #Putanja na kojoj ce konzola biti dostupna
      path: /h2-console
  #JPA-Hibernate - prikazuje SQL upite
  jpa:
    show-sql: true
    #kreira tabele na osnovu anotacija @Entity i kada aplikacija zavrsi sa radom, dropuje ih
    hibernate:
      ddl-auto: create-drop
      #bira najbolje konvencije imenovanja za tabele i polja u bazi
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    #optimizacija za h2 upite
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect