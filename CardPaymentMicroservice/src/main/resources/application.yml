frontend.url: https://localhost:4203/registration
callback-url-sent-bank:  https://localhost:${server.port}/payment/transaction-completed


eureka:
  client:
    serviceUrl:
      defaultZone: https://localhost:8761/eureka
    healthcheck:
      enabled: true
    lease:
      duration: 5
  instance:
    hostName: localhost
    nonSecurePortEnabled: false
    securePortEnabled: true
    securePort: ${server.port}
    statusPageUrl: https://${eureka.instance.hostname}:${eureka.instance.securePort}/${spring.application.name}/info
    healthCheckUrl: https://${eureka.instance.hostName}:${eureka.instance.securePort}/${spring.application.name}/health
    homePageUrl: https://${eureka.instance.hostname}:${eureka.instance.securePort}/${spring.application.name}/
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
    preferIpAddress: true


token:
  header: X-Auth-Token
  secret: myXAuthSecret
  expiration: 1800000


server:
  #servlet:
    #context-path: /api
  port: 8084
  ssl:
    key-store: classpath:stores/keystore.jks
    key-store-password: key_store_pass
    key-store-type: JKS
    key-alias: card_payment_microservice
    trust-store: classpath:stores/truststore.jks
    trust-store-password: trust_store_pass
    trust-store-type: JKS
    protocol: TLS
    enabled-protocols: TLSv1.2
    ciphers: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
    # Za definisanje ovoga, treba prethodno iskoristi kod u PkiApplication klasi, koja izlistava sve podrzane
    # chipers u Javi instaliranoj na nasem racunaru
    # Kod je pronadjen na: https://stackoverflow.com/questions/48934210/java-ssl-error-cannot-support-tls-ecdhe-rsa-with-aes-256-gcm-sha384
    client-auth: want
    # for two way authentication, use value: need




spring:
   application.name: pt_card-payment-microservice # stavljamo prefiks "pt_" (pt = payment type) da bismo znali razlikovati mikroservise
                                  # koji se odnose na tipove placanja od ostalih mikorservisa
   #Spring DataSource
   datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:myDb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password:
    #korisno ako je konekcija dugo u idle stanju
    testWhileIdle: true
    validationQuery: SELECT 1
   #Ukljucivanje konzole
   h2:
    console:
      enabled: true
      #Putanja na kojoj ce konzola biti dostupna
      path: /h2-console
   #JPA-Hibernate - prikazuje SQL upite
   jpa:
    show-sql: true
    #kreira tabele na osnovu anotacija @Entity i kada aplikacija zavrsi sa radom, dropuje ih
    hibernate:
      ddl-auto: create-drop
      #bira najbolje konvencije imenovanja za tabele i polja u bazi
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    #optimizacija za h2 upite
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect